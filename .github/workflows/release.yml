name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Build
        env:
          CGO_ENABLED: '0'
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          VERSION="${GITHUB_REF_NAME}"
          APP=show
          OUTDIR=dist/${APP}_${VERSION}_${GOOS}_${GOARCH}
          mkdir -p "${OUTDIR}/share/man/man1"
          go build -trimpath -ldflags "-s -w -X main.version=${VERSION}" -o "${OUTDIR}/${APP}" ./cmd/show
          cp man/show.1 "${OUTDIR}/share/man/man1/show.1"
          tar -C dist -czf "dist/${APP}_${VERSION}_${GOOS}_${GOARCH}.tar.gz" "${APP}_${VERSION}_${GOOS}_${GOARCH}"
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
          merge-multiple: true
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

